#!/usr/bin/perl 
eval 'exec /usr/bin/perl -S $0 ${1+"$@"}'
if 0;
$0 =~ s/^.*?(\w+)[\.\w+]*$/$1/;

use strict;
use warnings;

use Getopt::Long qw(:config gnu_getopt);
use Pod::Usage;
use File::Copy;
use File::Slurp;

my $old_args = join ' ', @ARGV;

my $upstream_url = "http://ftp.se.debian.org/debian";
my $excito_url = "http://b3.update.excito.org/";

my %distributions = (
	'vincent' => 1,
	'elvin' => 1,
	'hugo' => 1,
);

my %snapshotable = (
	'elvin' => 1
);

my %upstream_archives = (
	'vincent' => 'upstream_squeeze_forvincent',
	'hugo' => 'upstream_squeeze_forhugo',
	'elvin' => 'upstream_squeeze',
);

my %upstream_archives_raliases = (
	'vincent' => 'upstream_stable_forvincent',
	'hugo' => 'upstream_stable_forhugo',
	'elvin' => 'upstream_stable',
);

# sources can contain both codename and aliases
my %aliases = (
	'unstable' => 'vincent',
	'testing' => 'hugo',
	'stable' => 'elvin',
);

my %priorities = (
    'elvin' => 3,
    'hugo' => 2,
    'vincent' => 1,
);

# reverse aliases, needed for preferences
my %raliases = map { $aliases{$_} => $_ } keys %aliases;

my $distribution;

my $upstream = 0;
my $version = 0;
my $source = 0;
my $contrib = 0;
my $nonfree = 0;
my $help = 0;
my $man = 0;
my $experimental = 0;

my $result = GetOptions(
	"upstream|u" => \$upstream,
	"source|s" => \$source,
	"version|v=s" => \$version,
	"experimental|e" => \$experimental,
	"nonfree|n" => \$nonfree,
	"contrib|c" => \$contrib,
	"help|h" => \$help,
	"man|m" => \$man,
) or pod2usage(2);

pod2usage(0) if $help;
pod2usage(-exitstatus => 0, -verbose =>2) if $man;

pod2usage("No distribution given.") unless scalar @ARGV;



my $sources_list;
my $excito_list;

push @$sources_list, "# General sources.list";
push @$sources_list, "#";
push @$sources_list, "# Generated by $0 $old_args";
push @$sources_list, "#";
push @$sources_list, "# vim: ft=debsources";

push @$excito_list, "# Excito sources.list";
push @$excito_list, "#";
push @$excito_list, "# Generated by $0 $old_args";
push @$excito_list, "#";
push @$excito_list, "# vim: ft=debsources";


if( $upstream ) {
	my @suits = ("main");
	push @suits, 'non-free' if $nonfree;
	push @suits, 'contrib' if $contrib;

	push @$sources_list, "deb $upstream_url squeeze " . join( ' ', @suits );
	push @$sources_list, "deb-src $upstream_url squeeze " . join( ' ', @suits ) if $source;

}
my $last_prio = 0;
my $dist;
foreach my $distribution ( @ARGV ) {
	unless( defined $distributions{$distribution} ) {
		if( defined $aliases{$distribution} ) {
			$distribution = $aliases{$distribution};
		} else {
			pod2usage("Distribution '$distribution' is not valid.")
		}
	}

    if( $last_prio < $priorities{$distribution} ) {
        $dist = $distribution;
        $last_prio =  $priorities{$distribution};
    }
	my $real_distribution = $distribution;
	my $real_upstream = $upstream_archives{$distribution};

	if( $version && $snapshotable{$distribution} ) {
		$real_distribution .= "/snapshots/$version";
		$real_upstream .= "/snapshots/$version";
	}
	push @$excito_list, "deb $excito_url experimental main" if $experimental;
	push @$excito_list, "deb-src $excito_url experimental main" if $experimental and $source;

	push @$excito_list, "deb $excito_url $real_distribution main";
	push @$excito_list, "deb-src $excito_url $real_distribution main" if $source;

	push @$excito_list, "deb $excito_url $real_upstream main";
	push @$excito_list, "deb-src $excito_url $real_upstream main" if $source;
}

sub write_with_backup {
	my ($data, $target) = @_;
	my $old = "";
	$old = read_file($target) if -f $target;
	if( $data ne $old ) {
		if( -f $target) {
			move( $target, "$target~" ) or die "couldn't move $target: $!";
		}
		write_file( $target, $data ) or die "couldn't write to $target: $!";
	}
}

write_with_backup( join("\n", @$sources_list), '/etc/apt/sources.list' );
write_with_backup( join("\n", @$excito_list), '/etc/apt/sources.list.d/excito.list' );
write_with_backup( $dist, '/etc/apt/bubba.dist' );

if( -e '/etc/apt/preferences' ) {
	my $old_prefs = read_file('/etc/apt/preferences');
	if( $old_prefs =~ /Excito preferences/ ) {
		unlink '/etc/apt/preferences';
	}
}

__END__

=head1 NAME

change_distribution - change current distribution

=head1 SYNOPSIS

change_distribution [options] I<distribution> ...

 Options:
   --upstream, -u           include upstream in sources.list
   --source, -s             include source packages in sources.list
   --nonfree, -n            include upstream non free sources
   --contrib, -c            include upstream contrib sources
   --help, -h               show brief help
   --man, -m                display manual

=head1 EXAMPLES

change_distribution vincent # changes distribution to vincent

change_distribution vincent hugo # changes distribution to vincent and hugo

change_distribution vincent --upstream --source --nonfree --contrib # changes distribution to vincent with full upstream and source
change_distribution -usnc vincent # same, but using short options

change_distribution elvin --upstream # changes distribution to stable default layout
=cut
